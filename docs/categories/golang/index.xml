<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on egg blog</title>
    <link>https://blog.xyemy.com/categories/golang.html</link>
    <description>Recent content in golang on egg blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 13 Mar 2025 13:28:29 +0800</lastBuildDate><atom:link href="https://blog.xyemy.com/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GO 快速判断一个IP是否在给定的网段内</title>
      <link>https://blog.xyemy.com/post/2025/03/13/go%E5%BF%AB%E9%80%9F%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AAip%E6%98%AF%E5%90%A6%E5%9C%A8%E7%BB%99%E5%AE%9A%E7%9A%84%E7%BD%91%E6%AE%B5%E5%86%85.html</link>
      <pubDate>Thu, 13 Mar 2025 13:28:29 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2025/03/13/go%E5%BF%AB%E9%80%9F%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AAip%E6%98%AF%E5%90%A6%E5%9C%A8%E7%BB%99%E5%AE%9A%E7%9A%84%E7%BD%91%E6%AE%B5%E5%86%85.html</guid>
      <description>可以使用 Go 语言中的 net 包来判断一个 IP 是否在</description>
    </item>
    
    <item>
      <title>Beego注解路由</title>
      <link>https://blog.xyemy.com/post/2025/01/22/beego%E6%B3%A8%E8%A7%A3%E8%B7%AF%E7%94%B1.html</link>
      <pubDate>Wed, 22 Jan 2025 11:18:54 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2025/01/22/beego%E6%B3%A8%E8%A7%A3%E8%B7%AF%E7%94%B1.html</guid>
      <description>软件版本 beego 版本：1.12.0 bee 版本：1.</description>
    </item>
    
    <item>
      <title>Go语言速率限制 rate 库</title>
      <link>https://blog.xyemy.com/post/2024/10/31/go%E8%AF%AD%E8%A8%80%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6rate%E5%BA%93.html</link>
      <pubDate>Thu, 31 Oct 2024 14:11:12 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2024/10/31/go%E8%AF%AD%E8%A8%80%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6rate%E5%BA%93.html</guid>
      <description>golang.org/x/time/rate 是一个 Go 语言的库，用于控制事件的频率。</description>
    </item>
    
    <item>
      <title>Golang import的三种特殊形式：点、下划线、别名</title>
      <link>https://blog.xyemy.com/post/2023/04/24/golangimport%E7%9A%84%E4%B8%89%E7%A7%8D%E7%89%B9%E6%AE%8A%E5%BD%A2%E5%BC%8F%E7%82%B9%E4%B8%8B%E5%88%92%E7%BA%BF%E5%88%AB%E5%90%8D.html</link>
      <pubDate>Mon, 24 Apr 2023 16:41:25 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2023/04/24/golangimport%E7%9A%84%E4%B8%89%E7%A7%8D%E7%89%B9%E6%AE%8A%E5%BD%A2%E5%BC%8F%E7%82%B9%E4%B8%8B%E5%88%92%E7%BA%BF%E5%88%AB%E5%90%8D.html</guid>
      <description>1. 点 作用：这个包导入之后调用这个包内的函</description>
    </item>
    
    <item>
      <title>Beego 静态文件处理</title>
      <link>https://blog.xyemy.com/post/2022/09/27/beego%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86.html</link>
      <pubDate>Tue, 27 Sep 2022 10:01:34 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2022/09/27/beego%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86.html</guid>
      <description>静态文件注册: beego.SetStaticPath(&amp;#34;/attachment&amp;#34;,&amp;#34;static/attachment&amp;#34;) beego.SetStaticPath(&amp;#34;/public&amp;#34;,&amp;#34;static/public&amp;#34;) 第一个参数是路径，ur</description>
    </item>
    
    <item>
      <title>Golang 设置时区</title>
      <link>https://blog.xyemy.com/post/2022/09/06/golang%E8%AE%BE%E7%BD%AE%E6%97%B6%E5%8C%BA.html</link>
      <pubDate>Tue, 06 Sep 2022 13:44:47 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2022/09/06/golang%E8%AE%BE%E7%BD%AE%E6%97%B6%E5%8C%BA.html</guid>
      <description>1. 使用 time.FixedZone (推荐) import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; ) func main() { //东八</description>
    </item>
    
    <item>
      <title>Gin框架解决跨域问题</title>
      <link>https://blog.xyemy.com/post/2022/08/26/gin%E6%A1%86%E6%9E%B6%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.html</link>
      <pubDate>Fri, 26 Aug 2022 11:45:43 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2022/08/26/gin%E6%A1%86%E6%9E%B6%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.html</guid>
      <description>package main import ( &amp;#34;github.com/gin-gonic/gin&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;net/http&amp;#34; ) func main() { r := gin.Default() r.Use(Cors()) //开启</description>
    </item>
    
    <item>
      <title>Golang处理图片Decode后导致图片旋转</title>
      <link>https://blog.xyemy.com/post/2022/08/18/golang%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87decode%E5%90%8E%E5%AF%BC%E8%87%B4%E5%9B%BE%E7%89%87%E6%97%8B%E8%BD%AC.html</link>
      <pubDate>Thu, 18 Aug 2022 15:38:58 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2022/08/18/golang%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87decode%E5%90%8E%E5%AF%BC%E8%87%B4%E5%9B%BE%E7%89%87%E6%97%8B%E8%BD%AC.html</guid>
      <description>处理系统业务的时候需要裁切图片，发现某些</description>
    </item>
    
    <item>
      <title>Golang下载文件并解析文件名</title>
      <link>https://blog.xyemy.com/post/2022/03/29/golang%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%B9%B6%E8%A7%A3%E6%9E%90%E6%96%87%E4%BB%B6%E5%90%8D.html</link>
      <pubDate>Tue, 29 Mar 2022 10:50:52 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2022/03/29/golang%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%B9%B6%E8%A7%A3%E6%9E%90%E6%96%87%E4%BB%B6%E5%90%8D.html</guid>
      <description>下载文件时，文件名存在返回头的 Content-Disposition 中 格式 Content-Disposition:</description>
    </item>
    
    <item>
      <title>国密sm2 golang使用</title>
      <link>https://blog.xyemy.com/post/2022/03/28/%E5%9B%BD%E5%AF%86sm2golang%E4%BD%BF%E7%94%A8.html</link>
      <pubDate>Mon, 28 Mar 2022 11:51:43 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2022/03/28/%E5%9B%BD%E5%AF%86sm2golang%E4%BD%BF%E7%94%A8.html</guid>
      <description>package main import ( &amp;#34;bytes&amp;#34; &amp;#34;crypto/rand&amp;#34; &amp;#34;encoding/base64&amp;#34; &amp;#34;encoding/hex&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/tjfoc/gmsm/x509&amp;#34; ) func main() { //公钥 var sm2PublicKey</description>
    </item>
    
    <item>
      <title>Beego框架RequestBody是空的</title>
      <link>https://blog.xyemy.com/post/2021/10/22/beego%E6%A1%86%E6%9E%B6requestbody%E6%98%AF%E7%A9%BA%E7%9A%84.html</link>
      <pubDate>Fri, 22 Oct 2021 17:44:09 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2021/10/22/beego%E6%A1%86%E6%9E%B6requestbody%E6%98%AF%E7%A9%BA%E7%9A%84.html</guid>
      <description>beego使用的时候需要接收POST请求</description>
    </item>
    
    <item>
      <title>Golang通道操作</title>
      <link>https://blog.xyemy.com/post/2021/08/13/golang%E9%80%9A%E9%81%93%E6%93%8D%E4%BD%9C.html</link>
      <pubDate>Fri, 13 Aug 2021 11:36:55 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2021/08/13/golang%E9%80%9A%E9%81%93%E6%93%8D%E4%BD%9C.html</guid>
      <description>操作 通道状态 结果 Read nil 阻塞 打开，非空 正常 打</description>
    </item>
    
    <item>
      <title>Golang解析QP编码</title>
      <link>https://blog.xyemy.com/post/2021/06/19/golang%E8%A7%A3%E6%9E%90qp%E7%BC%96%E7%A0%81.html</link>
      <pubDate>Sat, 19 Jun 2021 15:01:36 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2021/06/19/golang%E8%A7%A3%E6%9E%90qp%E7%BC%96%E7%A0%81.html</guid>
      <description>Quoted-printable可译为“</description>
    </item>
    
    <item>
      <title>Goland 编译出现：exec: &#34;gcc&#34;: executable file not found in %PATH%</title>
      <link>https://blog.xyemy.com/post/2021/05/24/goland%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0gcc.html</link>
      <pubDate>Mon, 24 May 2021 17:12:28 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2021/05/24/goland%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0gcc.html</guid>
      <description>原因 在项目中引用 了cgo库，需要gcd编</description>
    </item>
    
    <item>
      <title>fatal error: alsa/asoundlib.h: No such file or directory</title>
      <link>https://blog.xyemy.com/post/2021/05/22/alsa_asoundlib_h_no_such_file_or_directory.html</link>
      <pubDate>Sat, 22 May 2021 20:31:03 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2021/05/22/alsa_asoundlib_h_no_such_file_or_directory.html</guid>
      <description>最近想写一个在家里装了armbian的N</description>
    </item>
    
    <item>
      <title>GoImports安装</title>
      <link>https://blog.xyemy.com/post/2021/04/18/goimports%E5%AE%89%E8%A3%85.html</link>
      <pubDate>Sun, 18 Apr 2021 21:23:28 +0800</pubDate>
      
      <guid>https://blog.xyemy.com/post/2021/04/18/goimports%E5%AE%89%E8%A3%85.html</guid>
      <description>Go开发过程中时候总需要手工引入包和删除</description>
    </item>
    
  </channel>
</rss>
